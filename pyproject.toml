[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "stock-trends-prediction"
version = "1.0.0"
description = "A comprehensive machine learning pipeline for predicting stock price movements using technical analysis and explainable AI"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Azhrak", email = "azhrak@gmail.com"},
]
keywords = [
    "machine-learning",
    "stock-prediction",
    "technical-analysis",
    "explainable-ai",
    "time-series",
    "finance",
    "trading",
    "lightgbm",
    "transformer",
    "shap"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business :: Financial :: Investment",
]

dependencies = [
    # Core ML/Data Science
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "scipy>=1.10.0",
    
    # Machine Learning Models
    "lightgbm>=4.0.0",
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "xgboost>=2.0.0",
    
    # Data Visualization
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    
    # Explainability
    "shap>=0.45.0",
    
    # Financial Data
    "yfinance>=0.2.0",
    "fredapi>=0.5.0",
    "alpha_vantage>=3.0.0",
    "pytrends>=4.9.0",
    
    # Data Processing
    "pyarrow>=10.0.0",
    "lxml>=4.9.0",
    "beautifulsoup4>=4.12.0",
    "requests>=2.31.0",
    
    # Utilities
    "tqdm>=4.65.0",
    "python-dateutil>=2.8.0",
    "PyYAML>=6.0.0",
    "click>=8.1.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    
    # Code Quality
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    
    # Development Tools
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "pre-commit>=3.3.0",
]

gpu = [
    # Note: CUDA support is automatically included in modern torch installations
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "torchaudio>=2.0.0",
]

all = [
    "stock-trends-prediction[dev,gpu]"
]

[project.urls]
Homepage = "https://github.com/Azhrak/stock-trends"
Repository = "https://github.com/Azhrak/stock-trends"
Documentation = "https://github.com/Azhrak/stock-trends#readme"
"Bug Reports" = "https://github.com/Azhrak/stock-trends/issues"

[project.scripts]
stock-trends = "cli:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.txt", "*.md"]

# Black Configuration
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Pytest Configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# MyPy Configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "fredapi.*",
    "alpha_vantage.*",
    "pytrends.*",
    "shap.*",
    "lightgbm.*",
]
ignore_missing_imports = true

# Coverage Configuration
[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Flake8 Configuration (in setup.cfg format within pyproject.toml is not supported)
# See setup.cfg or .flake8 for flake8 configuration

# Additional tool configurations can be added here
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = [
    "pandas",
    "numpy",
    "sklearn",
    "lightgbm",
    "torch",
    "transformers",
    "matplotlib",
    "seaborn",
    "shap",
    "yfinance",
    "fredapi",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]